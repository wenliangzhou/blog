<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>合理疯狂，疯狂合理
</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-13T08:27:15.082Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>周文亮</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>中介者模式</title>
    <link href="http://yoursite.com/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/JavaScript高级程序设计笔记/</id>
    <published>2019-08-08T10:39:18.000Z</published>
    <updated>2019-08-13T08:27:15.082Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>文档对象模型（DOM，Document Object Model）是针对 XML 但经过扩展用于 HTML 的应用程序编程接口（API，Application Programming Interface）。<br>通过 DOM 创建的这个表示文档的树形图，开发人员获得了控制页面内容和结构的主动权。借助<br>DOM 提供的 API，开发人员可以轻松自如地删除、添加、替换或修改任何节点。</p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>理解 DOM 的关键，就是理解 DOM 对性能的影响。DOM 操作往往是 JavaScript 程序中开销最大的 2 部分，而因访问 NodeList 导致的问题为最多。NodeList 对象都是“动态的”，这就意味着每次访问<br>NodeList 对象，都会运行一次查询。有鉴于此，最好的办法就是尽量减少 DOM 操作。<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;DOM&quot;&gt;&lt;a href=&quot;#DOM&quot; class=&quot;headerlink&quot; title=&quot;DOM&quot;&gt;&lt;/a&gt;DOM&lt;/h3&gt;&lt;h4 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h4&gt;&lt;p
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript高级程序设计" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="JavaScript高级程序设计笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C#-learn</title>
    <link href="http://yoursite.com/c-learn/"/>
    <id>http://yoursite.com/c-learn/</id>
    <published>2019-08-07T11:20:14.000Z</published>
    <updated>2019-08-13T08:27:15.083Z</updated>
    
    <content type="html"><![CDATA[<p>主要承诺：C# 学习笔记的记录</p><p>开始时间：2019-7-15</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>目前工作的后端技术栈是.net，所以有必要学习和对后续学习其他后端语言打好一点基础。</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol><li>尽量快速掌握C#，并实践</li><li>复习该笔记。</li></ol><h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><ol><li>1天<ul><li></li><li></li></ul></li><li>7天</li><li>30天</li><li>60天</li><li>90天</li><li>100天</li></ol><h3 id="额外的补充"><a href="#额外的补充" class="headerlink" title="额外的补充"></a>额外的补充</h3><ul><li>难点等深度扩展，会另写一篇文章进行记录。</li></ul><h3 id="日志模板"><a href="#日志模板" class="headerlink" title="日志模板"></a>日志模板</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## 第N天</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 学习节点标题 -内容：笔记</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 思想和情绪</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 明天的计划</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="第1天-2019年8月7日"><a href="#第1天-2019年8月7日" class="headerlink" title="第1天 2019年8月7日"></a>第1天 2019年8月7日</h3><h4 id="C-简介"><a href="#C-简介" class="headerlink" title="C#简介"></a>C#简介</h4><p>C# 是专为公共语言基础结构（CLI）设计的。CLI 由可执行代码和运行时环境组成，允许在不同的计算机平台和体系结构上使用各种高级语言。</p><h4 id="Net-框架（-Net-Framework）"><a href="#Net-框架（-Net-Framework）" class="headerlink" title=".Net 框架（.Net Framework）"></a>.Net 框架（.Net Framework）</h4><p>.Net 框架应用程序是多平台的应用程序。框架的设计方式使它适用于下列各种语言：C#、C++、Visual Basic、Jscript、COBOL 等等。所有这些语言可以访问框架，彼此之间也可以互相交互。</p><p>.Net 框架由一个巨大的代码库组成，用于 C# 等客户端语言。下面列出一些 .Net 框架的组件：</p><ul><li>公共语言运行库（Common Language Runtime - CLR）</li><li>.Net 框架类库（.Net Framework Class Library）</li><li>公共语言规范（Common Language Specification）</li><li>通用类型系统（Common Type System）</li><li>元数据（Metadata）和组件（Assemblies）</li><li>Windows 窗体（Windows Forms）</li><li>ASP.Net 和 ASP.Net AJAX</li><li>ADO.Net</li><li>Windows 工作流基础（Windows Workflow Foundation - WF）</li><li>Windows 显示基础（Windows Presentation Foundation）</li><li>Windows 通信基础（Windows Communication Foundation - WCF）</li><li>LINQ</li></ul><h4 id="思想和情绪"><a href="#思想和情绪" class="headerlink" title="思想和情绪"></a>思想和情绪</h4><h4 id="明天的计划"><a href="#明天的计划" class="headerlink" title="明天的计划"></a>明天的计划</h4><hr><h3 id="第2天-2019年8月8日"><a href="#第2天-2019年8月8日" class="headerlink" title="第2天 2019年8月8日"></a>第2天 2019年8月8日</h3><h4 id="C-数据类型"><a href="#C-数据类型" class="headerlink" title="C# 数据类型"></a>C# 数据类型</h4><p>在 C# 中，变量分为以下几种类型：</p><ul><li>值类型（Value types）</li><li>引用类型（Reference types）</li><li>指针类型（Pointer types）</li></ul><p>动态类型与对象类型相似，但是对象类型变量的类型检查是在编译时发生的，而动态类型变量的类型检查是在运行时发生的。</p><h4 id="思想和情绪-1"><a href="#思想和情绪-1" class="headerlink" title="思想和情绪"></a>思想和情绪</h4><h4 id="明天的计划-1"><a href="#明天的计划-1" class="headerlink" title="明天的计划"></a>明天的计划</h4><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要承诺：C# 学习笔记的记录&lt;/p&gt;
&lt;p&gt;开始时间：2019-7-15&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;目前工作的后端技术栈是.net，所以有必要学习和对
      
    
    </summary>
    
      <category term="前端技术学习记录" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="C#" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/C/"/>
    
    
      <category term="前端技术学习记录" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>中介者模式</title>
    <link href="http://yoursite.com/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/中介者模式/</id>
    <published>2019-08-01T08:39:18.000Z</published>
    <updated>2019-08-13T08:27:15.095Z</updated>
    
    <content type="html"><![CDATA[<h3 id="中介者模式"><a href="#中介者模式" class="headerlink" title="中介者模式"></a>中介者模式</h3><p>应用程序，无论其大小，都是由一些单个的对象所组成。所有这些对象需要一种方式来实现相互通信，而这种通信方式在一定程度上不降低可维护性，也不损害那种安全的改变部分应用程序而不会破坏其余部分的能力。随着应用程序的增长，将添加越来越多的对象。然后再代码重构期间，对象将被删除或者重新整理。当对象互相知道太多信息并且直接通信（调用对方的方法并改变属性）时，这将会导致产生不良的紧耦合（tight coupling）问题。当对象间紧密耦合时，很难在改变单个对象的同时不影响其他多个对象。因而，即使对应用程序进行最简单的修改也变得不再容易，而且几乎无法估计修改可能话费的时间。</p><p>中介者模式缓解了该问题并促进形成松耦合(loose coupling),而且还有助于提高可维护性。这种模式中，独立的对象之间并不直接通信，而是通过mediator将会把该变化传到任意其他应该只知道此变化的colleague对象。</p><h3 id="中介者示例"><a href="#中介者示例" class="headerlink" title="中介者示例"></a>中介者示例</h3><p>下面让我们探讨使用中介模式的例子。该应用程序是一个游戏程序，其中两名玩家分别给予半分钟的时间以竞争决胜出谁会比另一个按更多次数的按钮。在比赛中玩家1按2，而玩家2按0。计分板依据当前得分进行更新。</p><p>本例中参与的对象如下所示：</p><ol><li>玩家1</li><li>玩家2</li><li>计分板</li><li>中介者</li></ol><p>中介者知道所有其他对象的信息。它与输入设备(键盘)进行通信并处理键盘按键事件，并且还要决定是哪个玩家前进了一个回合，随后还将该消息通知给玩家。玩家玩游戏的同时，还要通知中介者他所做的事情。中介者将更新后的分数传达给计分板，计分板随后更新显示的分值。</p><p>除了中介者以外，没有对象知道任何其他对象。这种模式使得更新游戏变得非常方便，比如，通过该中介者可以很容易添加一个新的玩家或者另一个显示剩余时间的显示窗口。</p><p>player对象是由Player()构造函数所创建的，具有points和name属性。原型中的play()方法每次以1递增分数，然后通知中介者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Player</span> (<span class="params">name</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.points = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Player.prototype.play = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.points +=<span class="number">1</span>;</span><br><span class="line">  mediator.played();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scoreboard对象中有一个update()方法,在轮到每个玩家游戏结束之后mediator对象将调用该方法。scoreboard并不知道任何玩家的接口并且也没有保存分值，它仅根据mediator给定的值显示当前分数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scoreboard = &#123;</span><br><span class="line">  <span class="comment">// 待更新的HTML元素</span></span><br><span class="line">  element: <span class="built_in">document</span>.getElementById(<span class="string">'results),</span></span><br><span class="line"><span class="string">  // 更新得分显示</span></span><br><span class="line"><span class="string">  update:function(score)&#123;</span></span><br><span class="line"><span class="string">    var i,msg = '</span><span class="string">';</span></span><br><span class="line"><span class="string">    for (i in score)&#123;</span></span><br><span class="line"><span class="string">      if(score.hasOwnProperty(i)) &#123;</span></span><br><span class="line"><span class="string">        msg += '</span>&lt;p&gt;&lt;strong&gt;'+i+'&lt;\/strong&gt;<span class="string">';</span></span><br><span class="line"><span class="string">        msg += score[i];</span></span><br><span class="line"><span class="string">        msg += '</span>&lt;\/p&gt;<span class="string">';</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    this.element.innerHMTL = msg;</span></span><br><span class="line"><span class="string">  &#125;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>现在，让我们来查看一下mediator对象。它首先初始化游戏，在它的setup()方法中创建player对象，然后将这些player对象记录到自己的players属性中。其中,played()方法将在每轮游戏后由player所调用。该方法更新score哈希表并将其发送到scoreboard中以用于显示分值。最后一个方法为keypress(),它用于处理键盘事件，确定那个玩家前进了一个回合并通知该玩家：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mediator = &#123;</span><br><span class="line">  <span class="comment">// 所有的玩家(player对象)</span></span><br><span class="line">  players:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 初始化</span></span><br><span class="line">  setup:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> players = <span class="keyword">this</span>.players;</span><br><span class="line">    players.home = <span class="keyword">new</span> Player(<span class="string">'Home'</span>);</span><br><span class="line">    players.guest = <span class="keyword">new</span> Player(<span class="string">'Guest'</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 如果有人玩,则更新得分值</span></span><br><span class="line">  played:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> players = <span class="keyword">this</span>.players,</span><br><span class="line">    score = &#123;</span><br><span class="line">      Home: players.home.points,</span><br><span class="line">      Guest:players.guest.points</span><br><span class="line">    &#125;;</span><br><span class="line">    scoreboard.update(score);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 处理用户交互</span></span><br><span class="line">  keypress:<span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e = e || <span class="built_in">window</span>.event; <span class="comment">//IE浏览器</span></span><br><span class="line">    <span class="keyword">if</span>(e.which === <span class="number">49</span>)&#123; <span class="comment">// 按键1</span></span><br><span class="line">      mediator.players.home.play();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(e.which === <span class="number">48</span>)&#123; <span class="comment">// 按键2</span></span><br><span class="line">      mediator.players.guest.play();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而最后的事情就是要建立以及拆除该游戏：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 运行!</span></span><br><span class="line">mediator.setup();</span><br><span class="line"><span class="built_in">window</span>.onkeypress = mediator.keypress;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 游戏在30秒内结束</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">window</span>.onkeypress = <span class="literal">null</span>;</span><br><span class="line">  alert(<span class="string">'Game over!'</span>);</span><br><span class="line">&#125;,<span class="number">30000</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;中介者模式&quot;&gt;&lt;a href=&quot;#中介者模式&quot; class=&quot;headerlink&quot; title=&quot;中介者模式&quot;&gt;&lt;/a&gt;中介者模式&lt;/h3&gt;&lt;p&gt;应用程序，无论其大小，都是由一些单个的对象所组成。所有这些对象需要一种方式来实现相互通信，而这种通信方式在一定程度上
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>代理模式</title>
    <link href="http://yoursite.com/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/代理模式/</id>
    <published>2019-07-30T02:19:15.000Z</published>
    <updated>2019-08-13T08:27:15.096Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h3><p><img src="https://wenliangzhou.github.io/blog/img/proxy.png"></p><h3 id="缓存代理"><a href="#缓存代理" class="headerlink" title="缓存代理"></a>缓存代理</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;代理模式&quot;&gt;&lt;a href=&quot;#代理模式&quot; class=&quot;headerlink&quot; title=&quot;代理模式&quot;&gt;&lt;/a&gt;代理模式&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://wenliangzhou.github.io/blog/img/proxy.png&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>外观模式</title>
    <link href="http://yoursite.com/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/外观模式/</id>
    <published>2019-07-30T02:03:21.000Z</published>
    <updated>2019-08-13T08:27:15.097Z</updated>
    
    <content type="html"><![CDATA[<h3 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h3><p>外观(facade)模式是一种简单的模式，它为对象提供了一个可供选择的接口。这是一种非常好的设计模式实践，可保持方法的简洁性并且不会使他们处理过多的工作。如果原来有许多接受多个参数的uber方法，相比而言，按照本方法实现，最终将会创建更多数量的方法。有时候，两个或者更多的方法可能普遍的被遗弃调用。在这种情况下，创建另一个方法以包装重复的方法调用时非常有意义的。</p><p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myevent = &#123;</span><br><span class="line">  stop:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    e.stopPropagation();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 外观模式也非常适合于浏览器脚本处理，据此可将浏览器之间的差异隐藏在外观之后。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myevent = &#123;</span><br><span class="line">  stop:<span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 其他</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> e.preventDefault === <span class="string">"function"</span>)&#123;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// IE浏览器</span></span><br><span class="line">    <span class="keyword">if</span>()&#123;</span><br><span class="line">      <span class="comment">//....</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="利于重构"><a href="#利于重构" class="headerlink" title="利于重构"></a>利于重构</h3><p>外观模式对于重新设计和重构的工作也很有帮助。当需要替换一个具有不同实现的对象时，不得不花一段时间对它重新进行修改（这是一个复杂的对象），而且同时还需要使用该对象的新代码。通过使用外观模式，可以首先考虑对象的API，然后继续在原有对象的前面创建一个外观。这样，当您着手完全取代原有对象的时候，仅需修改更少的客户端代码，这是由于任何最新的客户端代码都已经使用了这个新API。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;外观模式&quot;&gt;&lt;a href=&quot;#外观模式&quot; class=&quot;headerlink&quot; title=&quot;外观模式&quot;&gt;&lt;/a&gt;外观模式&lt;/h3&gt;&lt;p&gt;外观(facade)模式是一种简单的模式，它为对象提供了一个可供选择的接口。这是一种非常好的设计模式实践，可保持方法的简洁性
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>装饰者模式</title>
    <link href="http://yoursite.com/%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/装饰者模式/</id>
    <published>2019-07-29T08:56:54.000Z</published>
    <updated>2019-08-13T08:27:15.105Z</updated>
    
    <content type="html"><![CDATA[<p>在装饰者模式中，可以在运行时动态添加功能到对象中。当处理静态类时，这可能是一个挑战。在Javasctipt中，由于对象是可变的，因此，添加功能到对象中的过程本身并不是问题。</p><p>装饰者模式的一个比较方便的特征在于其预期行为的可定制和可配置特性。可以从仅具有一些基本功能的普通对象开始，然后从可用装饰资源池中选择需要用于增强普通对象的那些功能，并且按照顺序进行装饰，尤其是当装饰顺序很重要的时候。</p><p>期望形式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sale = <span class="keyword">new</span> Sale(<span class="number">100</span>);     <span class="comment">//该价格为100美元</span></span><br><span class="line">sale = sale.decorate(<span class="string">'fedtax'</span>); <span class="comment">//增加联邦税</span></span><br><span class="line">sale = sale.decorate(<span class="string">'quebec'</span>); <span class="comment">//增加省级税</span></span><br><span class="line">sale = sale.decorate(<span class="string">'money'</span>); <span class="comment">//格式化为美元货币形式</span></span><br><span class="line">sale.getPrice();</span><br></pre></td></tr></table></figure><p>实现方式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sale</span>(<span class="params">price=<span class="number">100</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.price = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">Sale.prototype.getPrice = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.price;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 装饰着对象都将以构造函数的属性这种方式来实现：</span></span><br><span class="line">Sale.decorators = &#123;&#125;;</span><br><span class="line">Sale.decorators.fedtax = &#123;</span><br><span class="line">  getPrice:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> price = <span class="keyword">this</span>.uber.getPrice();</span><br><span class="line">    price += price * <span class="number">5</span>/<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">return</span> price;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Sale.decorators.quebec = &#123;</span><br><span class="line">  getPrice:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> price = <span class="keyword">this</span>.uber.getPrice();</span><br><span class="line">    price += price*<span class="number">7.5</span>/<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">return</span> price;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最后decorate()方法，它可以将所有的块拼接在一起。</span></span><br><span class="line">Sale.prototype.decorate = <span class="function"><span class="keyword">function</span> (<span class="params">decorator</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  overrides = <span class="keyword">this</span>.constructor.decorators[decorator],</span><br><span class="line">  i,newobj;</span><br><span class="line">  F.prototype = <span class="keyword">this</span>;</span><br><span class="line">  newobj = <span class="keyword">new</span> F();</span><br><span class="line">  newobj.uber = F.prototype;</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> overrides)&#123;</span><br><span class="line">    <span class="keyword">if</span>(overrides.hasOwnProperty(i))&#123;</span><br><span class="line">      newobj[i] = overrides[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newobj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用列表实现"><a href="#使用列表实现" class="headerlink" title="使用列表实现"></a>使用列表实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sale = <span class="keyword">new</span> Sale(<span class="number">100</span>);</span><br><span class="line">sale.decorate(<span class="string">'fedtax'</span>);</span><br><span class="line">sale.decorate(<span class="string">'quebec'</span>);</span><br><span class="line">sale.decorate(<span class="string">'money'</span>);</span><br><span class="line">sale.getPrice(); <span class="comment">//$112.88</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sale</span>(<span class="params">price = <span class="number">100</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.price = price;</span><br><span class="line">  <span class="keyword">this</span>.decorators_list = [];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Sale.decorators = &#123;&#125;;</span><br><span class="line">Sale.decorators.fedtax = &#123;</span><br><span class="line">  getPrice:<span class="function"><span class="keyword">function</span>(<span class="params">price</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> price + price *<span class="number">5</span>/<span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Sale.decorators.quebec = &#123;</span><br><span class="line">  getPrice:<span class="function"><span class="keyword">function</span>(<span class="params">price</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> price + price *<span class="number">7.5</span>/<span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Sale.decorators.money = &#123;</span><br><span class="line">  getPrice:<span class="function"><span class="keyword">function</span>(<span class="params">price</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'$'</span> + price.toFixed(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Sale.prototype.decorate = <span class="function"><span class="keyword">function</span>(<span class="params">decorator</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.decorators_list.push(decorator);</span><br><span class="line">&#125;</span><br><span class="line">Sale.prototype.getPrice = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> price = <span class="keyword">this</span>.price,i,max = <span class="keyword">this</span>.decorators_list.length,name;</span><br><span class="line">  <span class="keyword">for</span>(i==<span class="number">0</span>;i&lt;max;i+=<span class="number">1</span>)&#123;</span><br><span class="line">    name = <span class="keyword">this</span>.decorators_list[i];</span><br><span class="line">    price = Sale.decorators[name].getPrice(price);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在装饰者模式中，可以在运行时动态添加功能到对象中。当处理静态类时，这可能是一个挑战。在Javasctipt中，由于对象是可变的，因此，添加功能到对象中的过程本身并不是问题。&lt;/p&gt;
&lt;p&gt;装饰者模式的一个比较方便的特征在于其预期行为的可定制和可配置特性。可以从仅具有一些基本
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>观察者模式(发布/订阅)</title>
    <link href="http://yoursite.com/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/观察者模式/</id>
    <published>2019-07-29T07:29:14.000Z</published>
    <updated>2019-08-13T08:27:15.106Z</updated>
    
    <content type="html"><![CDATA[<p>观察者(observer)模式广泛应用于客户端Javacript编程中。所有浏览器事件（鼠标悬停，按键等事件）是该模式的例子。它的另一个名字也称为自定义事件（custom evensts）,与那些浏览器事件相比，自定义事件表示是由您编程实现的事件。此外，该模式的另外一个别名是订阅/发布(subscriber/publisher)模式。</p><p>设计这种模式背后的主要动机是促进形成松散耦合。在这种模式中，并不是一个对象调用另一个对象的方法，而是一个对象订阅另一个对象的特定活动并在状态改变后获得通知。订阅者也称之为观察者，而被观察的对象被称为发布者或者主题。发生一个重要的事件时，发布者将会通知(调用)所有订阅者并且可能经常以事件对象的形式传递消息。</p><p>代码示例：<br>杂志订阅<br>subscribers 一个数组<br>subscribe() 将订阅者添加到subscribers数组。<br>unsubscribe() 从订阅者数组中删除订阅者。<br>publish() 循环遍历subscribers中的每个元素，并且调用他们注册时所提供的方法。</p><p>所有这三种方法都需要一个type参数，因为发布者可能触发多个事件，而其中某些用户仅订阅了一种事件。<br>由于这些成员对于任何发布者对象都是通用的，将它们作为一个独立对象的一个部分来实现是很有意义的。那样我们可以将其赋值到任何对象中，并且将任意给定的对象变成一个发布者。</p><p>下面是该通用发布者功能的一个实现示例，它定义了前面列举的所有需要的成员，还加上了一个帮助方法visitSubscribers()；<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> publisher = &#123;</span><br><span class="line">  subscribers:&#123;</span><br><span class="line">    any:[] <span class="comment">//事件类型：订阅者</span></span><br><span class="line">  &#125;,</span><br><span class="line">  subscribe:<span class="function"><span class="keyword">function</span>(<span class="params">fn,type=<span class="string">'any'</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span>.subscribers[type] === <span class="literal">undefined</span>)&#123;</span><br><span class="line">      <span class="keyword">this</span>.subscribers[type] = [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.subscribers[type].push(fn);</span><br><span class="line">  &#125;,</span><br><span class="line">  unsubscribe:<span class="function"><span class="keyword">function</span>(<span class="params">fn,type</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.visitSubscribers(<span class="string">'unsubscribe'</span>,fn,type);</span><br><span class="line">  &#125;,</span><br><span class="line">  publish:<span class="function"><span class="keyword">function</span>(<span class="params">publication,type</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.visitSubscribers(<span class="string">'publish'</span>,publication,type);</span><br><span class="line">  &#125;,</span><br><span class="line">  visitSubscribers:<span class="function"><span class="keyword">function</span>(<span class="params">action,arg,type=<span class="string">'any'</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> subscribers = <span class="keyword">this</span>.subscribers[type],i,max = subscribers.length;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>,i&lt;max;i+=<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(action===<span class="string">'publish'</span>)&#123;</span><br><span class="line">        subscribers[i](arg);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(subscribers[i]===arg)&#123;</span><br><span class="line">          subscribers.splice(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makePublisher</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> publisher)&#123;</span><br><span class="line">    <span class="keyword">if</span>(publisher.hasOwnProperty(i)&amp;&amp; <span class="keyword">typeof</span> publisher[i]=== <span class="string">'function'</span>)&#123;</span><br><span class="line">      o[i] = publisher[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  o.subscribers = &#123;<span class="attr">any</span>:[]&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现在，让我们来实现paper对象。它所能做的就是发布日报和月刊：</span></span><br><span class="line"><span class="keyword">var</span> paper = &#123;</span><br><span class="line">  daily:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.publish(<span class="string">'big news today'</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  monthly:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.publish(<span class="string">'interesting analysis'</span>,<span class="string">'monthly'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将paper构造成一个发布者;</span></span><br><span class="line">makerPublisher(paper);</span><br><span class="line"><span class="keyword">var</span> joe = &#123;</span><br><span class="line">  drinkCoffee:<span class="function"><span class="keyword">function</span>(<span class="params">paper</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Just read'</span>+paper);</span><br><span class="line">  &#125;,</span><br><span class="line">  sundayPreNap:<span class="function"><span class="keyword">function</span>(<span class="params">monthly</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'About to fall asleep reading this'</span>+monthly);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">paper.subscribe(joe.drinkCoffee);</span><br><span class="line">paper.subscribe(joe.sundayPreNap,<span class="string">'monthly'</span>);</span><br><span class="line"></span><br><span class="line">paper.daily();</span><br><span class="line">paper.daily();</span><br><span class="line">paper.monthly();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;观察者(observer)模式广泛应用于客户端Javacript编程中。所有浏览器事件（鼠标悬停，按键等事件）是该模式的例子。它的另一个名字也称为自定义事件（custom evensts）,与那些浏览器事件相比，自定义事件表示是由您编程实现的事件。此外，该模式的另外一个别名
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>迭代器模式</title>
    <link href="http://yoursite.com/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/迭代器模式/</id>
    <published>2019-07-26T01:44:47.000Z</published>
    <updated>2019-08-13T08:27:15.107Z</updated>
    
    <content type="html"><![CDATA[<p>在迭代器模式中，通常有一个包含某种数据集合的对象。该数据可能储存在一个复杂的数据结构内部，而要提供一种简单的方法能够访问数据结构中每个元素。对象的消费者并不知道如何组织数据，所有需要做的就是取出单个数据进行工作。</p><p>在迭代器模式中，对象需要提供一个next()方法,依次调用next()必须返回下一个连续的元素。在特定的数据结构中，‘下一个’所代表的意义是由您来决定的。</p><p>代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> agg = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">  <span class="keyword">var</span> len = data.length;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    next:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> element;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">this</span>.hasNext())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      element = data[index];</span><br><span class="line">      index = index + <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">return</span> element;</span><br><span class="line">    &#125;,</span><br><span class="line">    hasNext:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> index &lt; len;</span><br><span class="line">    &#125;,</span><br><span class="line">    rewind:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//恢复指针</span></span><br><span class="line">      index = <span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    current:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//返回当前元素</span></span><br><span class="line">      <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在迭代器模式中，通常有一个包含某种数据集合的对象。该数据可能储存在一个复杂的数据结构内部，而要提供一种简单的方法能够访问数据结构中每个元素。对象的消费者并不知道如何组织数据，所有需要做的就是取出单个数据进行工作。&lt;/p&gt;
&lt;p&gt;在迭代器模式中，对象需要提供一个next()方
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>node-learn</title>
    <link href="http://yoursite.com/node-learn/"/>
    <id>http://yoursite.com/node-learn/</id>
    <published>2019-07-14T13:20:14.000Z</published>
    <updated>2019-08-13T08:27:15.094Z</updated>
    
    <content type="html"><![CDATA[<p>主要承诺：node 学习笔记的记录</p><p>开始时间：2019-7-15</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在开启多方便学习记录的同时，开启技术学习记录。</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol><li>尽量快速掌握node，并实践</li><li>复习该笔记。</li></ol><h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><ol><li>1天<ul><li></li><li></li></ul></li><li>7天</li><li>30天</li><li>60天</li><li>90天</li><li>100天</li></ol><h3 id="额外的补充"><a href="#额外的补充" class="headerlink" title="额外的补充"></a>额外的补充</h3><ul><li>难点等深度扩展，会另写一篇文章进行记录。</li></ul><h3 id="日志模板"><a href="#日志模板" class="headerlink" title="日志模板"></a>日志模板</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## 第N天</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 今天的进步</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 思想和情绪</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 明天的计划</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="第1天-2019年7月15日"><a href="#第1天-2019年7月15日" class="headerlink" title="第1天 2019年7月15日"></a>第1天 2019年7月15日</h3><h4 id="今天的进步"><a href="#今天的进步" class="headerlink" title="今天的进步"></a>今天的进步</h4><h4 id="思想和情绪"><a href="#思想和情绪" class="headerlink" title="思想和情绪"></a>思想和情绪</h4><h4 id="明天的计划"><a href="#明天的计划" class="headerlink" title="明天的计划"></a>明天的计划</h4><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要承诺：node 学习笔记的记录&lt;/p&gt;
&lt;p&gt;开始时间：2019-7-15&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;在开启多方便学习记录的同时，开启技术学习记录。
      
    
    </summary>
    
      <category term="前端技术学习记录" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="node" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/node/"/>
    
    
      <category term="前端技术学习记录" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>finance</title>
    <link href="http://yoursite.com/finance/"/>
    <id>http://yoursite.com/finance/</id>
    <published>2019-07-14T13:10:56.000Z</published>
    <updated>2019-08-13T08:27:15.086Z</updated>
    
    <content type="html"><![CDATA[<p>主要承诺：进行金融知识框架的搭建</p><p>开始时间：2019-7-15</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>开启金融框架学习的记录，以便更好的鞭策自己，由于英语第二轮在开启中，这门课有时间会尽量进行记录，和复习。</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol><li>如果有学习新的课程，会在此记录笔记。</li><li>复习该笔记。</li></ol><h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><ol><li>1天<ul><li></li><li></li></ul></li><li>7天</li><li>30天</li><li>60天</li><li>90天</li><li>100天</li></ol><h3 id="额外的补充"><a href="#额外的补充" class="headerlink" title="额外的补充"></a>额外的补充</h3><ul><li><h3 id="日志模板"><a href="#日志模板" class="headerlink" title="日志模板"></a>日志模板</h3></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## 第N天</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 今天的进步</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 思想和情绪</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 明天的计划</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="第1天-2019年7月15日"><a href="#第1天-2019年7月15日" class="headerlink" title="第1天 2019年7月15日"></a>第1天 2019年7月15日</h3><h4 id="今天的进步"><a href="#今天的进步" class="headerlink" title="今天的进步"></a>今天的进步</h4><h4 id="思想和情绪"><a href="#思想和情绪" class="headerlink" title="思想和情绪"></a>思想和情绪</h4><h4 id="明天的计划"><a href="#明天的计划" class="headerlink" title="明天的计划"></a>明天的计划</h4><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要承诺：进行金融知识框架的搭建&lt;/p&gt;
&lt;p&gt;开始时间：2019-7-15&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;开启金融框架学习的记录，以便更好的鞭策自己，由于
      
    
    </summary>
    
      <category term="财务自由" scheme="http://yoursite.com/categories/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1/"/>
    
      <category term="金融框架的搭建" scheme="http://yoursite.com/categories/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1/%E9%87%91%E8%9E%8D%E6%A1%86%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="财务自由" scheme="http://yoursite.com/tags/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>100天英语挑战 (第二轮)</title>
    <link href="http://yoursite.com/learn-english-1/"/>
    <id>http://yoursite.com/learn-english-1/</id>
    <published>2019-07-14T13:01:54.000Z</published>
    <updated>2019-08-13T08:27:15.091Z</updated>
    
    <content type="html"><![CDATA[<p>主要承诺：每天进行英语学习</p><p>开始时间：2019-7-15</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>第一轮英语学习没有日常更新，项目比较忙，但我觉得这不是理由，希望这轮能够坚持下去。因为上一轮已经背了1400个基础单词，如果能够坚持下去应该会有很好的结果，而且在下次开启学习记录前有一个很好的开头。so,up up up.</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol><li>每天进行英语学习</li><li>我将在这里跟踪我的进展并推送给GitHub。</li><li>如果出现重要的事情，我会跳过这一天不算在100天之中。</li></ol><h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><ol><li>1天<ul><li></li><li></li></ul></li><li>7天</li><li>30天</li><li>60天</li><li>90天</li><li>100天</li></ol><h3 id="额外的补充"><a href="#额外的补充" class="headerlink" title="额外的补充"></a>额外的补充</h3><ul><li>不要连续两天跳过，并且两周之内跳过一天</li></ul><h3 id="日志模板"><a href="#日志模板" class="headerlink" title="日志模板"></a>日志模板</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## 第N天</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 今天的进步</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 思想和情绪</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 明天的计划</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="第1天-2019年7月15日"><a href="#第1天-2019年7月15日" class="headerlink" title="第1天 2019年7月15日"></a>第1天 2019年7月15日</h3><h4 id="今天的进步"><a href="#今天的进步" class="headerlink" title="今天的进步"></a>今天的进步</h4><h4 id="思想和情绪"><a href="#思想和情绪" class="headerlink" title="思想和情绪"></a>思想和情绪</h4><h4 id="明天的计划"><a href="#明天的计划" class="headerlink" title="明天的计划"></a>明天的计划</h4><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要承诺：每天进行英语学习&lt;/p&gt;
&lt;p&gt;开始时间：2019-7-15&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;第一轮英语学习没有日常更新，项目比较忙，但我觉得这不是
      
    
    </summary>
    
      <category term="100天挑战" scheme="http://yoursite.com/categories/100%E5%A4%A9%E6%8C%91%E6%88%98/"/>
    
      <category term="英语" scheme="http://yoursite.com/categories/100%E5%A4%A9%E6%8C%91%E6%88%98/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="100天挑战" scheme="http://yoursite.com/tags/100%E5%A4%A9%E6%8C%91%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>html调用摄像头录制视频拍照</title>
    <link href="http://yoursite.com/html%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4%E5%BD%95%E5%88%B6%E8%A7%86%E9%A2%91%E6%8B%8D%E7%85%A7/"/>
    <id>http://yoursite.com/html调用摄像头录制视频拍照/</id>
    <published>2019-05-22T02:32:42.000Z</published>
    <updated>2019-08-13T08:27:15.087Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>需求：</p><ul><li>html5兼容调用摄像头录制，及拍照。</li></ul></li><li><p>兼容情况：</p><ul><li>QQ，微信，自家APP内嵌的html5页面。</li></ul></li><li><p>痛点：</p><ul><li><p>安卓录制视频太大，和摄像头的像素有关系，图片大到没有关系可以canvas压缩。但视频没有太好的办法。除了第一步用<strong>getusermedia</strong>API获取视频流，在用<strong>mediarecorder</strong>API进行处理数据。可以控制视频大小。IOS录 制的视频系统貌似自动做了压缩，视频不是很大。</p></li><li><p>所以采用原生 <strong>input file</strong>和<strong>getusermedia</strong>API两种方式结合进行摄像头调用。</p></li></ul></li></ul><p>下面就是vue组件代码代码：</p><ul><li><p>组件思路基本如下:</p><ul><li><strong>camera</strong>组件需注意:各种浏览器点击是否直接弹出相机，还是有选择文件，相册，属性的配置是不同的。所以做了如下代码的兼容。但QQ嵌入浏览器只能有选择文件的选项，不能配置直接弹出相机。至于APP,自己APP直接file文件不能弹出相机,只有选择文件，后面APP更新了，，貌似是APP禁用了file弹出相机应该有某些权限设置的原因。</li><li><strong>mediarecorder</strong>组件在安卓浏览器情况下用调用就可以了。<br>不同端调用组件的情况：</li><li>IOS 调用<strong>camera</strong>组件</li><li>安卓浏览器情况下 调用<strong>mediarecorder</strong>组件</li><li>APP内嵌h5 调用调用<strong>camera</strong>组件  (ps：可能权限问题不能调用相机，但是ios 自己APP可以调用相机)<br>那怎么判断是在APP呢，IOS还是安卓直接UA判断就可以了。可以通过设置url参数只要有这个参数，一定是在APP下访问的h5页面。当然可能不适用所有场景。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 相机拍照录制组件</span></span><br><span class="line"><span class="keyword">var</span> camera = &#123;</span><br><span class="line">    template:</span><br><span class="line">        <span class="string">'&lt;label  class="hidd"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;input type="file" :class="_class" :name="name"  :accept="_accept" :capture = "qqOrWx" &gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/label&gt;'</span>,</span><br><span class="line">    props: [</span><br><span class="line">        <span class="string">'accept'</span>,</span><br><span class="line">        <span class="string">'capture'</span>,</span><br><span class="line">        <span class="string">'name'</span>,</span><br><span class="line">        <span class="string">'_class'</span>,</span><br><span class="line">        <span class="string">'direct'</span></span><br><span class="line">    ],</span><br><span class="line">    computed: &#123;</span><br><span class="line">        <span class="string">'_accept'</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.accept || <span class="string">'image/*'</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'qqOrWx'</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.direct) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.capture;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.isWQ();</span><br><span class="line">            <span class="keyword">switch</span> (<span class="keyword">this</span>.isqq) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'qq'</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">this</span>.capture;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'weixin'</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'iPhone'</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        isWQ: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">var</span> ua = <span class="built_in">window</span>.navigator.userAgent.toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (ua.indexOf(<span class="string">'qq'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="regexp">/iPhone/i</span>.test(ua))&#123;</span><br><span class="line">                    _this.isqq = <span class="string">"iPhone"</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="regexp">/nettype/i</span>.test(ua)) &#123;</span><br><span class="line">                    <span class="comment">//微信或者QQ</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="regexp">/micromessenger/i</span>.test(ua)) &#123;</span><br><span class="line">                        <span class="comment">//微信</span></span><br><span class="line">                        _this.isqq = <span class="string">"weixin"</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">//QQ</span></span><br><span class="line">                        _this.isqq = <span class="string">"qq"</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//QQ浏览器</span></span><br><span class="line">                    _this.isqq = <span class="string">"QQliulanqi"</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//其他浏览器</span></span><br><span class="line">                _this.isqq = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">'camera'</span>, camera);</span><br><span class="line"></span><br><span class="line"><span class="comment">// getusermedia recorder_video</span></span><br><span class="line"><span class="keyword">var</span> recorder_video = &#123;</span><br><span class="line">    template:</span><br><span class="line">    <span class="string">'&lt;div class="recorderwrap"&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;div class="describewrap" v-show="active"&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;p class="item1"&gt;&#123;&#123;message.text10&#125;&#125;&#123;&#123;count&#125;&#125;s&lt;/p&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;/div&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;video @touchmove.prevent ref ="video" v-show="active" controls autoplay playsinline&gt;&lt;/video&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;div class="btnwrap"&gt;&lt;button @click="start"  class="bluebtn" &gt;&#123;&#123;message.text8&#125;&#125;&lt;/button&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;button @click="nextstep" class="bluebtn" :disabled="savebtn"&gt;&#123;&#123;message.text9&#125;&#125;&lt;/button&gt;&lt;/div&gt;'</span>+</span><br><span class="line">    <span class="string">'&lt;/div&gt;'</span>,</span><br><span class="line">    props:[</span><br><span class="line">        <span class="string">'constrains'</span>,</span><br><span class="line">        <span class="string">'recordtime'</span>,</span><br><span class="line">        <span class="string">'message'</span></span><br><span class="line">    ],</span><br><span class="line">    data:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        mediaRecorder:<span class="string">''</span>,</span><br><span class="line">        chunks:[],</span><br><span class="line">        status:<span class="string">'inactive'</span>,</span><br><span class="line">        mediaStreamTrack :<span class="string">''</span>,</span><br><span class="line">        savebtn:<span class="literal">true</span>,</span><br><span class="line">        count:<span class="string">''</span></span><br><span class="line">      &#125;  </span><br><span class="line">    &#125;,</span><br><span class="line">    computed:&#123;</span><br><span class="line">        <span class="string">'option'</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.constrains || &#123;  <span class="attr">video</span>: <span class="literal">true</span> ,<span class="attr">audio</span>: &#123;<span class="attr">echoCancellation</span>:<span class="literal">true</span>&#125;&#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'videoUrl'</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">window</span>.URL || <span class="built_in">window</span>.webkitURL || <span class="built_in">window</span>.mozURL || <span class="built_in">window</span>.msURL;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'time'</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.recordtime || <span class="number">5000</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'active'</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="keyword">this</span>.status) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'recording'</span>:</span><br><span class="line">                    <span class="keyword">this</span>.savebtn = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'inactive'</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count = <span class="keyword">this</span>.time/<span class="number">1000</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        getUserMedia:<span class="function"><span class="keyword">function</span> (<span class="params">constrains,success,error</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(navigator.mediaDevices.getUserMedia)&#123;</span><br><span class="line">                <span class="comment">//最新标准API</span></span><br><span class="line">                navigator.mediaDevices.getUserMedia(constrains).then(success).catch(error);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.webkitGetUserMedia)&#123;</span><br><span class="line">                <span class="comment">//webkit内核浏览器</span></span><br><span class="line">                navigator.webkitGetUserMedia(constrains).then(success).catch(error);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.mozGetUserMedia)&#123;</span><br><span class="line">                <span class="comment">//Firefox浏览器</span></span><br><span class="line">                navigator.mozGetUserMedia(constrains).then(success).catch(error);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.getUserMedia)&#123;</span><br><span class="line">                <span class="comment">//旧版API</span></span><br><span class="line">                navigator.getUserMedia(constrains).then(success).catch(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        start:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!(navigator.mediaDevices || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia))&#123;</span><br><span class="line">                openDialog(&#123;</span><br><span class="line">                    cht:<span class="string">'您的瀏覽器不支持拍攝視頻功能'</span>,</span><br><span class="line">                    chs:<span class="string">'您的浏览器不支持拍摄视频功能'</span></span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.getUserMedia(<span class="keyword">this</span>.option,<span class="keyword">this</span>.success,<span class="keyword">this</span>.error);</span><br><span class="line">        &#125;,</span><br><span class="line">        setData:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">            _this.mediaRecorder.ondataavailable = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                _this.chunks.push(e.data);</span><br><span class="line">                _this.stop();</span><br><span class="line">            &#125;</span><br><span class="line">            _this.mediaRecorder.onstop = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> blob = <span class="keyword">new</span> Blob(_this.chunks, &#123; <span class="string">'type'</span> : <span class="string">'video/mp4'</span> &#125;);</span><br><span class="line">                _this.chunks = [];</span><br><span class="line">                _this.blobToDataURL(blob,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> reg = <span class="regexp">/^data:(video)\/(image|mp4|quicktime|webm|3gpp);base64,/</span>;</span><br><span class="line">                    <span class="keyword">var</span> str = data.replace(reg, <span class="string">""</span>);</span><br><span class="line">                    _this.savebtn = <span class="literal">false</span>;</span><br><span class="line">                    _this.message.text8 = lang==<span class="string">'cht'</span>?<span class="string">'重新錄制'</span>:<span class="string">'重新录制'</span>;</span><br><span class="line">                    _this.$emit(<span class="string">'ondata'</span>,str);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        stop:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> video = <span class="keyword">this</span>.$refs.video;</span><br><span class="line">            video.pause();</span><br><span class="line">            <span class="keyword">this</span>.mediaRecorder.stop();</span><br><span class="line">            <span class="keyword">this</span>.mediaStreamTrack &amp;&amp; <span class="keyword">this</span>.mediaStreamTrack.stop();</span><br><span class="line">            <span class="keyword">this</span>.status = <span class="keyword">this</span>.mediaRecorder.state;</span><br><span class="line">        &#125;,</span><br><span class="line">        blobToDataURL:<span class="function"><span class="keyword">function</span> (<span class="params">blob,callback</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="keyword">new</span> FileReader();</span><br><span class="line">            startwait(); <span class="comment">//开起loading的方法</span></span><br><span class="line">            a.onload = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                stopwait();<span class="comment">//关闭loading</span></span><br><span class="line">                callback(e.target.result);</span><br><span class="line">            &#125;</span><br><span class="line">            a.readAsDataURL(blob);</span><br><span class="line">        &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">stream</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">            _this.mediaRecorder = <span class="keyword">new</span> MediaRecorder(stream);</span><br><span class="line">            _this.mediaRecorder.start(<span class="keyword">this</span>.time);</span><br><span class="line">            _this.mediaRecorder.stream = stream;</span><br><span class="line">            _this.status = _this.mediaRecorder.state;</span><br><span class="line">            _this.mediaStreamTrack = <span class="keyword">typeof</span> stream.stop === <span class="string">'function'</span> ? stream : stream.getTracks()[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">var</span> video = <span class="keyword">this</span>.$refs.video;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"srcObject"</span> <span class="keyword">in</span> video) &#123;</span><br><span class="line">                video.srcObject = stream</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                video.src = <span class="built_in">window</span>.URL &amp;&amp; <span class="built_in">window</span>.URL.createObjectURL(stream) || stream</span><br><span class="line">            &#125;</span><br><span class="line">            video.muted=<span class="literal">true</span>;</span><br><span class="line">            video.volume=<span class="number">0</span>;</span><br><span class="line">            video.play();</span><br><span class="line">            _this.setData();</span><br><span class="line">            <span class="keyword">this</span>.countfn();</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err.name == <span class="string">'NotAllowedError'</span>)&#123;</span><br><span class="line">                openDialog(&#123;</span><br><span class="line">                    cht:<span class="string">'您的瀏覽器拍照權限被禁止'</span>,</span><br><span class="line">                    chs:<span class="string">'您的浏览器拍照权限被禁止'</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(err.name == <span class="string">'NotReadableError'</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.constrains = &#123;  <span class="attr">video</span>: <span class="literal">true</span> ,<span class="attr">audio</span>: <span class="literal">false</span>&#125;;</span><br><span class="line">                <span class="keyword">this</span>.start();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                openDialog(&#123;</span><br><span class="line">                    cht:<span class="string">'您的瀏覽器不支持拍照功能'</span>,</span><br><span class="line">                    chs:<span class="string">'您的浏览器不支持拍照功能'</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        nextstep:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.$emit(<span class="string">'next'</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        countfn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">var</span> num = _this.count;</span><br><span class="line">            <span class="keyword">var</span> time = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                _this.count--;</span><br><span class="line">                <span class="keyword">if</span> (_this.count&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(time);</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        _this.count = num;</span><br><span class="line">                    &#125;,<span class="number">1000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">'recordervideo'</span>, recorder_video);</span><br></pre></td></tr></table></figure><p>下面是获取input file文件的base64，图片压缩方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取reader</span></span><br><span class="line">wlzCamera.prototype.readURL = <span class="function"><span class="keyword">function</span> (<span class="params">input, callback,changehook</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">if</span> (input.files &amp;&amp; input.files[<span class="number">0</span>]) &#123;</span><br><span class="line">        changehook();</span><br><span class="line">        <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">        reader.readAsDataURL(input.files[<span class="number">0</span>]);</span><br><span class="line">        reader.onload = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            stopwait();</span><br><span class="line">            <span class="keyword">if</span> (_this.prebox) &#123;</span><br><span class="line">                <span class="comment">// 如果有预览盒子 添加预览图片</span></span><br><span class="line">                <span class="keyword">var</span> prebox = <span class="built_in">document</span>.querySelector(_this.prebox);</span><br><span class="line">                <span class="keyword">var</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</span><br><span class="line">                img.src = e.target.result;</span><br><span class="line">                prebox.append(img);</span><br><span class="line">                img.setAttribute(<span class="string">'data-bind'</span>, _this.prebox);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            callback(e.target.result, e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (_this.prebox) &#123;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">'[data-bind = "'</span> + _this.prebox + <span class="string">'"]'</span>).remove();</span><br><span class="line">        &#125;</span><br><span class="line">        callback(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wlzCamera.prototype.init = <span class="function"><span class="keyword">function</span> (<span class="params">callback,changehook</span>) </span>&#123;</span><br><span class="line">    changehook = changehook?changehook:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;startwait();&#125;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 绑定事件回调</span></span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.fileInput);</span><br><span class="line">    el.onchange = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        _this.readURL(el, <span class="function"><span class="keyword">function</span> (<span class="params">v, e</span>) </span>&#123;</span><br><span class="line">            callback(v, e);</span><br><span class="line">        &#125;,changehook);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 图片压缩方法</span></span><br><span class="line">wlzCamera.prototype.compress = <span class="function"><span class="keyword">function</span> (<span class="params">option,base64,callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(base64.match(<span class="regexp">/video/</span>))&#123;</span><br><span class="line">        callback(base64);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> quality =  option.quality || <span class="number">0.6</span>;</span><br><span class="line">    <span class="keyword">var</span> max = option.max;</span><br><span class="line">    <span class="keyword">var</span> sacle = option.sacle || <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> result = base64;</span><br><span class="line">    <span class="keyword">var</span> maxheight = option.maxheight || <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">    img.src = base64;</span><br><span class="line">    <span class="comment">// 如果质量为1，则不进行压缩。</span></span><br><span class="line">    <span class="keyword">if</span>(quality == <span class="number">1</span>)&#123;</span><br><span class="line">        callback(result);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 生产比例</span></span><br><span class="line">        <span class="keyword">var</span> width = img.width;</span><br><span class="line">        <span class="keyword">var</span> height = img.height;</span><br><span class="line">        <span class="comment">// 重新计算宽高 默认最大1000</span></span><br><span class="line">        <span class="keyword">while</span> (height*sacle&gt;maxheight) &#123;</span><br><span class="line">            sacle -= <span class="number">0.01</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        width*=sacle;</span><br><span class="line">        height*=sacle;</span><br><span class="line">        <span class="comment">// 生产cavas</span></span><br><span class="line">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">        <span class="keyword">var</span> cxt = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">        canvas.width = width;</span><br><span class="line">        canvas.height = height;</span><br><span class="line">        cxt.drawImage(img,<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line">        result = canvas.toDataURL(<span class="string">'image/jpeg'</span>,quality);</span><br><span class="line">        <span class="keyword">if</span> (max) &#123;</span><br><span class="line">            <span class="keyword">while</span> (result.length / <span class="number">1024</span> &gt; max) &#123;</span><br><span class="line">                quality -= <span class="number">0.01</span>;</span><br><span class="line">                result = canvas.toDataURL(<span class="string">"image/jpeg"</span>, quality);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        callback(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 封装成一个获取base64方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h5getBase64</span>(<span class="params">option, callback,changehook</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> inputname = option.inputname;</span><br><span class="line">    <span class="keyword">if</span> (h5getBase64[inputname]) &#123;  <span class="comment">//单例</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 实例</span></span><br><span class="line">    <span class="keyword">var</span> _self = option.app;</span><br><span class="line">    <span class="comment">// 获取相册base64 和预览的方法</span></span><br><span class="line">    <span class="keyword">var</span> reg = option.reg;</span><br><span class="line">    h5getBase64[inputname] = <span class="keyword">new</span> wlzCamera(&#123;</span><br><span class="line">        fileInput: inputname,</span><br><span class="line">        <span class="comment">// prebox:'.box'</span></span><br><span class="line">    &#125;);</span><br><span class="line">    h5getBase64[inputname].init(<span class="function"><span class="keyword">function</span> (<span class="params">v, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str;</span><br><span class="line">        <span class="keyword">if</span> (!v) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        h5getBase64[inputname].compress(option,v,<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            str = result.replace(reg, <span class="string">""</span>);</span><br><span class="line">            callback(result, str, _self, e); </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,changehook);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面用法大致如下</span></span><br><span class="line"><span class="comment">// camera 用法</span></span><br><span class="line"> <span class="comment">// 初始化 拍照 需要的参数</span></span><br><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    app: app,</span><br><span class="line">    inputname: <span class="string">'input.shiping'</span>,</span><br><span class="line">    reg: <span class="regexp">/^data:(video|image)\/(image|mp4|quicktime|png|gif|jpeg|jpg|3gpp);base64,/</span></span><br><span class="line">&#125;</span><br><span class="line">h5getBase64(option, <span class="function"><span class="keyword">function</span> (<span class="params">v, str, _self,e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// _self 是传进来的实例对象。</span></span><br><span class="line">  <span class="comment">// dosthing</span></span><br><span class="line">  <span class="comment">// ajax</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// android 是否是安卓 isAppH5是不死APPH5  !$.arrayInclude(channel) 是不是原生APP      这些变量主要是处理什么时候隐藏彼此，调用那个组件 so 自己定义好就可以了，这里只是个思路。</span></span><br><span class="line">&lt;recordervideo v-<span class="keyword">if</span>=<span class="string">"android &amp;&amp; !isAppH5"</span> :message=<span class="string">"&#123;&#125;"</span> @next=<span class="string">"sendajax"</span>  @ondata = <span class="string">"ondata"</span>&gt;&lt;/recordervideo&gt;</span><br><span class="line">&lt;camera v-<span class="keyword">else</span>-<span class="keyword">if</span>=<span class="string">"!$.arrayInclude(channel)"</span> :_class=<span class="string">"'shiping'"</span> :name=<span class="string">"'shiping'"</span> :accept=<span class="string">"'video/*'"</span> :capture = <span class="string">"'user'"</span> :direct = <span class="string">"true"</span> &gt;&lt;/camera&gt;</span><br></pre></td></tr></table></figure><p>有问什么问题可以github上联系我，或者邮箱等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;html5兼容调用摄像头录制，及拍照。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;兼容情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QQ，微信，自家APP内嵌的html5页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;痛
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>浏览器兼容问题</title>
    <link href="http://yoursite.com/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/浏览器兼容问题/</id>
    <published>2019-05-08T07:11:54.000Z</published>
    <updated>2019-08-13T08:27:15.102Z</updated>
    
    <content type="html"><![CDATA[<p>记录下浏览器可能会碰到的坑</p><ol><li>UC浏览器无法加载CSS</li></ol><ul><li>uc浏览有一个广告拦截模式，它可能会错误的把css屏蔽掉。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录下浏览器可能会碰到的坑&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;UC浏览器无法加载CSS&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;uc浏览有一个广告拦截模式，它可能会错误的把css屏蔽掉。&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>工厂模式</title>
    <link href="http://yoursite.com/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/工厂模式/</id>
    <published>2019-05-08T01:23:57.000Z</published>
    <updated>2019-08-13T08:27:15.101Z</updated>
    
    <content type="html"><![CDATA[<p>工厂模式,它通常在类或者类的静态方法中实现，具有以下目标</p><ul><li>当创建相似对象时，执行重复操作。</li><li>在编译时不知道具体类型的情况下，为工厂客户提供一种创建对象的接口。<br>通过工厂方法(或者类)创建的对象在设计上都继承了相同的父对象这个思想，它们都是实现专门功能的特定子类。有时候公共父类是一个包含了工厂方法的同一个类。</li></ul><p>期望结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> car = CarMaker.factory(<span class="string">'benz'</span>);</span><br><span class="line"><span class="keyword">var</span> motor = CarMaker.factory(<span class="string">'dajiang'</span>);</span><br><span class="line"><span class="keyword">var</span> bike = CarMaker.factory(<span class="string">'fenghuang'</span>);</span><br><span class="line">car.drive(); <span class="comment">// 4个轮子</span></span><br><span class="line">motor.drive(); <span class="comment">//2个轮子</span></span><br><span class="line">bike.drive(); <span class="comment">//2个轮子</span></span><br></pre></td></tr></table></figure><p>需要保证完全相等，且指针不变。</p><p>实现方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CarMaker</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">// a method of the parent</span></span><br><span class="line">CarMaker.prototype.drive = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`Vroom,I have <span class="subst">$&#123;<span class="keyword">this</span>.wheel&#125;</span> wheels`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态工厂方法</span></span><br><span class="line">CarMaker.factory = <span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> constr = type,newcar;</span><br><span class="line">  <span class="comment">// 如果构造函数不再在，则报错</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> CarMaker[constr] !==<span class="string">"function"</span>)&#123;</span><br><span class="line">    <span class="keyword">throw</span>&#123;</span><br><span class="line">      name:<span class="string">'Error'</span>,</span><br><span class="line">      message:constr+<span class="string">"doesn't exist"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 继承父类</span></span><br><span class="line">  CarMaker[constr].prototype = <span class="keyword">new</span> CarMaker();</span><br><span class="line">  newcar = <span class="keyword">new</span> CarMaker[constr]();</span><br><span class="line">  <span class="keyword">return</span> newcar;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义不同类型的车子</span></span><br><span class="line">CarMaker.car = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.wheel = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">CarMaker.motor = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.wheel = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">CarMaker.bike = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.wheel = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工厂模式,它通常在类或者类的静态方法中实现，具有以下目标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当创建相似对象时，执行重复操作。&lt;/li&gt;
&lt;li&gt;在编译时不知道具体类型的情况下，为工厂客户提供一种创建对象的接口。&lt;br&gt;通过工厂方法(或者类)创建的对象在设计上都继承了相同的父对象这个
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>JS倒计时页面刷新</title>
    <link href="http://yoursite.com/JS%E5%80%92%E8%AE%A1%E6%97%B6%E9%A1%B5%E9%9D%A2%E5%88%B7%E6%96%B0/"/>
    <id>http://yoursite.com/JS倒计时页面刷新/</id>
    <published>2019-05-08T01:23:57.000Z</published>
    <updated>2019-08-13T08:27:15.080Z</updated>
    
    <content type="html"><![CDATA[<p>写了个倒计时的插件，页面刷新倒计时仍然有效，利用localStorage储存。下面贴上代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timer</span> (<span class="params">&#123;id,count=<span class="number">60</span>&#125;=&#123;&#125;,callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.restnum = count;</span><br><span class="line">    <span class="keyword">this</span>.num = count;</span><br><span class="line">    <span class="keyword">this</span>.callback = callback;</span><br><span class="line">&#125;</span><br><span class="line">timer.prototype.count= <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 进入倒计时</span></span><br><span class="line">    <span class="keyword">let</span> done = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.callback(<span class="keyword">this</span>.num,done);</span><br><span class="line">    <span class="keyword">let</span> time = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.num--;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.num&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            clearInterval(time);</span><br><span class="line">            done = <span class="literal">true</span>;</span><br><span class="line">            localStorage.removeItem(<span class="keyword">this</span>.id)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.callback(<span class="keyword">this</span>.num,done);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">timer.prototype.start = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 设置时间</span></span><br><span class="line">    <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    localStorage.setItem(<span class="keyword">this</span>.id,time);</span><br><span class="line">    <span class="comment">// 重置计数</span></span><br><span class="line">    <span class="keyword">this</span>.num = <span class="keyword">this</span>.restnum;</span><br><span class="line">    <span class="comment">// 启动计时</span></span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line">timer.prototype.init = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取localnum和loacltime</span></span><br><span class="line">    <span class="keyword">let</span> time = localStorage.getItem(<span class="keyword">this</span>.id);</span><br><span class="line">    <span class="keyword">if</span>(!time)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">let</span> dvalue = (now - time)/<span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">if</span>(dvalue&gt;<span class="keyword">this</span>.num)&#123;</span><br><span class="line">        localStorage.removeItem(<span class="keyword">this</span>.id);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.num = <span class="built_in">parseInt</span>(<span class="keyword">this</span>.num - dvalue);</span><br><span class="line">    <span class="keyword">this</span>.count();</span><br><span class="line">    <span class="comment">// 根据时间 判断 num是否小于0。</span></span><br><span class="line">    <span class="comment">// 小于0 过期清除停止倒计时,清除时间</span></span><br><span class="line">    <span class="comment">// 大于0 计算正确 num </span></span><br><span class="line">    <span class="comment">// 开始倒计时</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports =&#123;</span><br><span class="line">    timer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>用法如下:<br>不同元素用同一个ID参数即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * num：倒计时数值</span></span><br><span class="line"><span class="comment"> * done：是否倒计时完成 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> timer = <span class="keyword">new</span> timer(&#123;<span class="attr">id</span>:<span class="string">'time'</span>,<span class="attr">count</span>:<span class="keyword">this</span>.count&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">num,done</span>) </span>&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">this</span>.timer.init();</span><br></pre></td></tr></table></figure></p><p>注意在vue 下直接绑定start函数是注意this的指向</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@click=<span class="string">"timer.start()"</span></span><br><span class="line"><span class="comment">// start一定要带() 不然start函数里的this指向window而不是实例timer</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写了个倒计时的插件，页面刷新倒计时仍然有效，利用localStorage储存。下面贴上代码&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>策略模式</title>
    <link href="http://yoursite.com/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/策略模式/</id>
    <published>2019-05-08T01:23:57.000Z</published>
    <updated>2019-08-13T08:27:15.104Z</updated>
    
    <content type="html"><![CDATA[<p>策略模式支持您在运行时选择算法。代码客户端可以使用同一个接口来工作，但是它却根据客户正在试图执行任务的上下文，从多个算法中选择用于处理特定任务的算法。</p><p>数据验证实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据验证对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Validator</span>(<span class="params">&#123;config=&#123;&#125;&#125;=&#123;config:&#123;&#125;&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.config = config;</span><br><span class="line">  <span class="keyword">this</span>.message = [];</span><br><span class="line">&#125;</span><br><span class="line">Validator.prototype.validate = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 重置所有消息</span></span><br><span class="line">  <span class="keyword">this</span>.message = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> data) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data.hasOwnProperty(key)) &#123;</span><br><span class="line">      <span class="keyword">const</span> value = data[key];</span><br><span class="line">      <span class="keyword">let</span> checkers = <span class="keyword">this</span>.config[key];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">const</span> checker <span class="keyword">of</span> checkers) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!checker) &#123;</span><br><span class="line">          <span class="comment">// 没有验证则不需要验证</span></span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> checkType = <span class="keyword">this</span>[checker];</span><br><span class="line">        <span class="keyword">if</span> (!checkType) &#123;</span><br><span class="line">          <span class="keyword">throw</span> &#123;</span><br><span class="line">            name: <span class="string">'ValidationError'</span>,</span><br><span class="line">            message: <span class="string">'No handler to validate'</span> + checker</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// true 验证ok</span></span><br><span class="line">        <span class="keyword">let</span> result_ok = checkType.validate(data[key]);</span><br><span class="line">        <span class="keyword">if</span> (!result_ok.pass) &#123;</span><br><span class="line">          <span class="keyword">this</span>.message.push(&#123;...result_ok,<span class="attr">instructions</span>:checkType.instructions&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.hasError();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 帮助方法</span></span><br><span class="line">Validator.prototype.hasError = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.message.length !== <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Validator.prototype.isEmpty = &#123;</span><br><span class="line">  validate: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Questionns = data.Questionns;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; Questionns.length; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> question = Questionns[i];</span><br><span class="line">      <span class="comment">// 如果不是必要则不需要验证</span></span><br><span class="line">      <span class="keyword">if</span> (question.IsMust !=<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> checked = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; question.Answers.length; j++) &#123;</span><br><span class="line">        <span class="keyword">const</span> answer = question.Answers[j];</span><br><span class="line">        <span class="keyword">if</span> (answer.IsSelect==<span class="string">"true"</span>) &#123;</span><br><span class="line">          checked = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; answer.remarklist.length; k++) &#123;</span><br><span class="line">          <span class="keyword">const</span> remark = answer.remarklist[k];</span><br><span class="line">          <span class="keyword">if</span> (remark.ismust &amp;&amp; (answer.OptionContent.split(<span class="string">'@'</span>)[k+<span class="number">1</span>]==<span class="string">''</span>||answer.OptionContent.indexOf(<span class="string">'@'</span>)==<span class="number">-1</span>) &amp;&amp; answer.IsSelect==<span class="string">"true"</span>) &#123;</span><br><span class="line">            checked = <span class="number">2</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (checked &amp;&amp; checked!=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 没有勾选返回</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          checked,</span><br><span class="line">          pass:<span class="literal">false</span>,</span><br><span class="line">          data:question</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      pass:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  instructions: <span class="string">'isEmpty'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;策略模式支持您在运行时选择算法。代码客户端可以使用同一个接口来工作，但是它却根据客户正在试图执行任务的上下文，从多个算法中选择用于处理特定任务的算法。&lt;/p&gt;
&lt;p&gt;数据验证实例&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://yoursite.com/javascriptModel/"/>
    <id>http://yoursite.com/javascriptModel/</id>
    <published>2019-05-08T01:23:57.000Z</published>
    <updated>2019-08-13T08:27:15.089Z</updated>
    
    <content type="html"><![CDATA[<p>期望结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uni = <span class="keyword">new</span> universe();</span><br><span class="line"><span class="keyword">var</span> uni2 = <span class="keyword">new</span> universe();</span><br><span class="line">nni === uni2 <span class="comment">// true;</span></span><br></pre></td></tr></table></figure><p>需要保证完全相等，且指针不变。</p><p>实现方法：<br>可以使用，静态属性缓存实例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Universe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> Universe.instance === <span class="string">"object"</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> Universe.instance;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.name = <span class="string">'小明'</span>;</span><br><span class="line">  <span class="keyword">this</span>.age = <span class="number">8</span></span><br><span class="line">  Universe.instance = <span class="keyword">this</span>;</span><br><span class="line">  <span class="comment">// 隐式返回this;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;期望结果：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="书籍笔记" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="第七章设计模式" scheme="http://yoursite.com/categories/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/javascript%E6%A8%A1%E5%BC%8F/%E7%AC%AC%E4%B8%83%E7%AB%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>js执行顺序详解</title>
    <link href="http://yoursite.com/js%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/js执行顺序详解/</id>
    <published>2019-05-07T03:31:14.000Z</published>
    <updated>2019-08-13T08:27:15.090Z</updated>
    
    <content type="html"><![CDATA[<p>1.下面这段代码执行顺序会是怎样的呢？和文件大小有关？读取时长有关？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> aa = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> loadFiles = <span class="built_in">document</span>.getElementById(<span class="string">"loadFiles"</span>);<span class="comment">//获取id为loadFiles的input对象</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleFiles</span>(<span class="params">files</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(files.length)&#123;</span><br><span class="line">            <span class="keyword">var</span> file = files[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">            reader.readAsText(file);</span><br><span class="line">            reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                aa = <span class="number">2</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(aa);</span><br><span class="line">            &#125;;</span><br><span class="line">         </span><br><span class="line">            <span class="built_in">console</span>.log(aa);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="file" id='loadFiles' onchange="handleFiles(this.files)" /</span>&gt;</span><br><span class="line">&lt;div id=<span class="string">"filesContent"</span> &gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure><p>解答：<br>跟文件大小、读取时间耗时长短无关。<br>先输出1后输出2是必然的！</p><p>证明如下：</p><p>首先写一个阻塞函数，用于阻塞JS执行线程一段时间：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">block</span>(<span class="params">delay</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> end = +<span class="keyword">new</span> <span class="built_in">Date</span>() + delay;</span><br><span class="line">    <span class="keyword">while</span>(+<span class="keyword">new</span> <span class="built_in">Date</span>() &lt;= end)&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后，把它加到你的代码中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">reader.readAsText();</span><br><span class="line">block(<span class="number">5000</span>);</span><br><span class="line">reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br><span class="line">block(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p><p>结果是什么？是不论你阻塞多长时间，结果都是先输出1，后输出2。</p><p>结论就是：</p><blockquote><p>onload回调函数被设计成了不在当前这一轮事件循环调用。</p></blockquote><p>2.下面关于定时器，和promise的执行顺序是什么样的呢？抛出题目先。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">0</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve();</span><br><span class="line">            <span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">2</span>));</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">5</span>);</span><br><span class="line">        <span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">8</span>)); <span class="comment">//这句是多加的</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="number">6</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></p><p><a href="https://www.jianshu.com/p/ca480f9e7dea" target="_blank" rel="noopener">答案详解参考</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.下面这段代码执行顺序会是怎样的呢？和文件大小有关？读取时长有关？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/JS/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>学习备忘</title>
    <link href="http://yoursite.com/%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/"/>
    <id>http://yoursite.com/学习备忘/</id>
    <published>2019-05-05T16:24:12.000Z</published>
    <updated>2019-08-13T08:27:15.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>希望通过备忘来复习通过零散的时间学习到的东西，并及时做下笔记，待有时间来复习和手动实现。</p><h3 id="日志模板"><a href="#日志模板" class="headerlink" title="日志模板"></a>日志模板</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## Date</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 内容</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 来源</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 关联</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="第1天-2019年5月6日00-29-47"><a href="#第1天-2019年5月6日00-29-47" class="headerlink" title="第1天 2019年5月6日00:29:47"></a>第1天 2019年5月6日00:29:47</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><p>VUE 组件封装，API的模拟，ajax的封装及代理,路由的重新定向,公共变量的引入,顶部导航条组件封装,localstore配合axios处理session，以及axios处理统一请求头。</p><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>马轮的SFA的视频教学</p><h4 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h4><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">API模拟</a><br><a href="https://baianat.github.io/vee-validate/" target="_blank" rel="noopener">表单校验插件</a><br><a href="https://ke.qq.com/course/376157?taid=3042971444690269" target="_blank" rel="noopener">马伦视频教程</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;希望通过备忘来复习通过零散的时间学习到的东西，并及时做下笔记，待有时间来复习和手动实现。&lt;/p&gt;
&lt;h3 id=&quot;日志模板&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="日常备忘" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/%E6%97%A5%E5%B8%B8%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="技术备忘" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF%E5%A4%87%E5%BF%98/"/>
    
  </entry>
  
  <entry>
    <title>english-notes</title>
    <link href="http://yoursite.com/english-notes/"/>
    <id>http://yoursite.com/english-notes/</id>
    <published>2019-05-01T13:07:23.000Z</published>
    <updated>2019-08-13T08:27:15.085Z</updated>
    
    <content type="html"><![CDATA[<p>开始时间：2019-5-1</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>笔记来源：100天英语挑战中的英语笔记</p><h3 id="额外的补充"><a href="#额外的补充" class="headerlink" title="额外的补充"></a>额外的补充</h3><p><a href="https://www.jianshu.com/p/a0aa94ef8ab2" target="_blank" rel="noopener">mathjax语法格式</a></p><h3 id="音标"><a href="#音标" class="headerlink" title="音标"></a>音标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">元音：</span><br><span class="line">[i] [ɪ] [e] [ɛ] [æ] 嘴型 横紧→竖长</span><br><span class="line">[ɑ] [ʌ] [ə] [ɚ] [ɝ] 嘴型长得最大的是[ɑ]</span><br><span class="line">[o] [ɔ] [u] [ʊ]     o→u</span><br><span class="line">[aɪ] [aʊ] [ɔɪ]</span><br><span class="line">辅音：</span><br><span class="line">清： p t k f s θ ʃ tʃ</span><br><span class="line">浊： b d g v z ð ʒ dʒ</span><br><span class="line">清： h</span><br><span class="line">浊： m n ŋ l r w j</span><br><span class="line">元音前后读音有变化的音标：m n l r</span><br><span class="line">m 嘴巴闭。 (么)</span><br><span class="line">n 舌头向上，嘴巴不闭。 （n）</span><br><span class="line">ŋ 舌头向下，嘴巴不闭。</span><br><span class="line">l e o 之间的发音girl [gɜrl]  (l)</span><br></pre></td></tr></table></figure><p><a href="https://www.youtube.com/watch?v=jRESJPxi0Ws&amp;list=PLaYqF7AnyNPd86-BJip5ldg6vw4lcZzxx&amp;index=3" target="_blank" rel="noopener">复习元音</a><br><a href="https://www.youtube.com/watch?v=GjEqk2VnOoo&amp;list=PLaYqF7AnyNPd86-BJip5ldg6vw4lcZzxx&amp;index=5" target="_blank" rel="noopener">复习辅音</a><br><a href="https://www.youtube.com/watch?v=847CJLkg2FM&amp;t=67s" target="_blank" rel="noopener">国际音标和KK音标的区别</a></p><h4 id="发音知识"><a href="#发音知识" class="headerlink" title="发音知识"></a>发音知识</h4><p>辅音部分嘴型相同，分为浊，和清。</p><h4 id="拼读原则："><a href="#拼读原则：" class="headerlink" title="拼读原则："></a>拼读原则：</h4><ul><li>音标中没有重音符号时元音四声辅音轻声</li><li>音标分割方法：元音前连接一个辅音划分一个音节，前面两个辅音的时候单独发音<br>grill[g<strong>rɪ</strong>l] bunny[<strong>bʌ</strong> <strong>ni:</strong>]</li><li>元音前后读音有变化的音标：m n l r</li><li><p>拼读变化<br>[s] + [p] [t] [k] 浊化<br>元音 [ə] 在单词音标结尾时，会发音成较轻较短促的a音<br>[br] [pr] [kr] [gr] 辅音 + 辅音 + 元音<br>这里我们列出「br + 母音」的发音例词，请多做发音与听音练习，习惯这个发音形态。发音技巧：先拼音 r + 元音，之后 b 音加进來，三个音一起发音，b 不是单音的发音方式，请注意。</p></li><li><p>句子拼读原则强调单词读重音</p></li></ul><h4 id="过去式-ed-浊后-d-清后-t"><a href="#过去式-ed-浊后-d-清后-t" class="headerlink" title="过去式 ed 浊后[d]清后[t]"></a>过去式 ed 浊后[d]清后[t]</h4><ul><li>例句<br>   Tim grilled[gril][d] six fish.<br>   May baked[bek][t] eight cakes.<br> 复数 es [iz]</li><li>例句<br>   Watches are not clocks.<br>   A wacth is not a clock.<br> 复数 s<ol><li>/ts/ boat oa一起a不发音</li><li>ride[raɪd] rides 浊音念/z/  /dz/</li><li>house[haus] houses[hauzɪz] 加上复数s   s变z es变/iz/</li><li>toy[tɔɪ] 复数 toys  元音结尾复数加s 不用去y加ies<br>plays[plez] 元音结尾s 变/z/ aeiou 结尾y直接加s<br>cry[kraɪ] cries</li></ol></li><li>例句<br>   Those owners rowed[d] old bo<em>a</em>ts[bot][s] <strong>/ts/</strong><br> gh不发音  catch[kætʃ]</li><li>例句<br>   Paul caught[kot] all balls.<br> [ʊ] wooden[wudn]dn中间少了个 ɚ</li><li>例句<br> A wolf pulled wooden hooks.<br> [u] ew 发u</li><li>例句<br> Sue blew[blu] two blue[blu] balloons<br> [ə] the[ðə] the 后面接元音开头发[ðɪ]  the apple<br> 元音aeiou 三个元音在一个单词里面 其中一个不发音 polite[pɚlaɪt]<br> 单词末尾e不发音</li></ul><h4 id="自然拼读"><a href="#自然拼读" class="headerlink" title="自然拼读"></a>自然拼读</h4><p>oa [o] c<strong>oa</strong>t [k<strong>o</strong>t]<br>Aa [æ] bag [bæg]; cat [kæt]; jam [dʒæm]<br>Bb [b] bat [bæt]; bed [bæd]; boy [bɔɪ]<br>Cc [k] can [kæn]; car [kar]; c<strong>oa</strong>t [k<strong>o</strong>t]<br>Dd [d] dog [dɔg]; door [dɔr]  <strong>oo</strong>$^③$; duck [dʌk]<br>Ee [ɝ] bell[bɝl]; desk [dɝsk]; red [rɝd]<br>Ff [f] fac$(e)_×$ [fes]; fan [fæn]; food[fud]  <strong>oo</strong>$^③$<br>Gg [g] game [gem]  <strong>a~e</strong>$^②$; girl [gɝl]; egg [ɛg]<br>Hh [h] hat [hæt]; hair [hɛr]; hope [hop] <strong>oo</strong>$^{①③}$<br>Ii [ɪ] bib [bɪb]; kiss [kɪs]; six [sɪks]<br>Jj [dʒ] job [dʒɑb]; July [dʒulaɪ]; jump [dʒʌp]<br>Kk [k] key [ki]; king [kɪŋ]; kite [kaɪt]<br>Ll [l] lake [lek]; leaf [lif]; light[laɪt]<br>Mm [m] man [mæn]<br>Nn [n] name [nem]<br>Oo [o] cold [kold] ni$(gh)_x$t<br>Pp [p] pig [pɪg]<br>Qq [kw] quit[kwɪt]<br>Rr [r] rabbit [ræbɪt]<br>Ss [s] sale [sel]<br>Tt [t] table [tebl]<br>Uu [ʌ] cup [kʌp]<br>Ww [w] watch [watʃ]<br>Xx [ks] box[baks]<br>Yy [j] yellow [jɛlo]<br>Zz [z] zero [zɪro]</p><ul><li>e 结构 末尾不发音 $^①$</li><li>a~e 结构 e在末尾不发音 a 发 IPA [ei] $^②$</li><li>oo 结构 [u] [o] [ɔ] $^③$</li><li>ing 结构 [ɪŋ] $^④$</li><li>dog [ɔ] god[a]</li><li>know [no] kn在一起k不发音</li><li>[i] =&gt; e:we [wi]; me [mi]<pre><code>e:feet[fit]; see [si]ea:heat[hit]; fleat[fit]y:lady[ladi]; easy[izi]ie:field[fild]; thief[θif]</code></pre></li><li>[ɪ] =&gt; i:dig[dɪg];milk[milk]<pre><code>y:gym[dʒɪm];dirty[dɝtɪ]</code></pre></li><li>[e] =&gt; a~e:name[nem];lake[lek]<pre><code>ai:nail [nel];rain[ren]ay:day[de];way[we]ea:steak[stek];great[gret]</code></pre></li><li>[ɛ] =&gt; e:bed[bɛd];<pre><code>ea:bread[brɛd];e~e:sense[sense]</code></pre></li><li>[æ] =&gt; a:cat [kæt];</li><li>[a] =&gt; o:lock[lak];<pre><code>a:watch[watʃ];</code></pre></li><li>[o] =&gt; o:go[go]<pre><code>o~e:hope[hop]ow:know[no]oa:boat[bot]oe:toe[to]</code></pre></li><li>[ɔ] =&gt; o(r):for[fɔr]<pre><code>a(l):talk[tɔk] l不发音a(ll):ball[bɔl]au:cause[kɔz]aw:saw[sɔ]</code></pre></li><li>[ʊ] =&gt; oo:book[bʊk]<pre><code>u:put[pʊt]</code></pre></li><li>[u] =&gt; oo:moon[mun]<pre><code>u:ruby[rubɪ]ue:blue[blu]ew:flew[flu]u~e:rule[rul]</code></pre></li><li>[ʌ] =&gt; u:duck[dʌk]<pre><code>o:son[sʌn]ou:double[dabl]</code></pre></li><li>[ə] =&gt; a:ago[əgo]<pre><code>e:quiet[kwaɪt]i:direct[dərɛkt]o:today[təde]u:circus[sɝkəs]</code></pre></li><li>[ɚ] =&gt; er:after[æftɚ]<pre><code>or:tailor[telɚ]</code></pre></li><li>[ɝ] =&gt; ur:burn[bɝn]<pre><code>er:clerk[klɝk]ir:bird[bɝd]</code></pre><strong>重点</strong> er在重音节[ɝ]轻音节[ɚ]</li><li>[aɪ] =&gt; i~e:bike[baɪk]<pre><code>y:cry[kraɪ]i:child[tʃaɪld]ie:die[daɪ]igh:night[naɪt]</code></pre></li><li>[aʊ] =&gt; ou:cloud[klaʊd]<pre><code>ow:cow[kaʊ]</code></pre></li><li>[ɔɪ] =&gt; oi:coin[kɔɪn]<pre><code>oy:boy[bɔɪ]</code></pre></li><li>字音[k] =&gt; c:cat[kæt]<pre><code>k:key[ki]ck:luck[lʌk]lk:talk[tɔk]q:(在u之前):queen[kwin],quit[kwɪt]</code></pre></li><li>[g] =&gt; g:在a o u 或其他字音前<pre><code>gate[get]在字尾:bag[bæg]gh:ghost[gost]</code></pre></li><li>[f] =&gt; f:fan[fæn]<pre><code>ff:muffin[mʌfin]ph:phone[fon]if:shelf[ʃɛlf]gh(在au,ou)之后:laugh[læf]</code></pre></li><li>[s] =&gt; C(在i,e,y之前)<pre><code>circle[sɝkl]s:sun[sʌn]ss:boss[bɔs]</code></pre></li><li>[ʃ] =&gt; sh:shark[ʃark]<br><strong>重点</strong> s和h出现在不同音节，则不发[ʃ]<br>如:dishonor[dɪsanɚ]<pre><code>ti:nation[neʃɚn]sci:conscience[kanʃəns]ch:(常出现在法国字演变成的英文字中)chef[ʃɛf]ssi:mission[mɪʃɚn]s:sure[ʃʊr]si:mansion[mæɚn]</code></pre></li><li>[θ] =&gt; th:thin[θɪn]</li><li>[ð] =&gt; th:that[ðæt]<br><strong>重点</strong>但 Thomas[taməs]</li><li>[ʒ] =&gt; si:vision[vɪʒən]<pre><code>s:pleasure[plɛʒə]g:rouge[ruʒ]</code></pre></li><li>[tʃ] =&gt; ch:cheese[tʃiz]<pre><code>t:nature[netʃɚ]tch:match[mætʃ]</code></pre></li><li>[dʒ] =&gt; g(在i,e,y之前):gentle[dʒɛntl]<pre><code>j:just[dʒʌst]dge:bridge[brɪdʒ]d:graduation[grædʒueʃɚn]</code></pre></li><li>[h] =&gt; h:hat[hæt]<pre><code>wh:who[hu]</code></pre></li><li>[n] =&gt; n:can[kæn]<pre><code>nn:runner[rʌnɚ]kn:knife[naɪf]</code></pre></li><li>[ŋ] =&gt; n(在k之后):pink[pɪŋk]<pre><code>ng:ring[rɪŋ]</code></pre><strong>重点</strong>ng还有[ŋg]的音:finger[fiŋgɚ] kangaroo 很少单词</li><li>[j] =&gt; y:yellow[jɛlo]<pre><code>i:onion[ʌnjɚ]</code></pre><strong>字音字母省略不发音</strong><br>b =&gt; 在t或m前不发音:debt[dɛt] thumb[θʌm]<br>c =&gt; ck的c不发音:pick[pɪk]<br>偶尔在s之后不发音：scene[sin]<br>g =&gt; 在n之前不发音：gnash[næʃ] design<br>gh =&gt; 在t之前不发音：bought[bɔt] caught<br>h =&gt; 在r或k之后不发音:rhyme[raɪm]<br>=&gt; 和母音字母同时出现在字尾:oh[o]<br>=&gt;偶尔在字音和非重音节母音之间不发音：shepherd[ʃɛpɚd]<br>=&gt;偶尔在字首不发音:hour[aʊr],honor[ɑnɚ]<br>=&gt;在ex之后：exhaust[ɪgzɔst]<br>k =&gt;和n同时出现在字首时不发音:know[no]<br>l =&gt;在alk.alm.alf中不发音：talk[tɔk]<br>=&gt;在ould中不发音：should[ʃʊd]<br>n =&gt;和m同时出现时不发音：autumn[ɔtɚm]<br>p =&gt;和n.s.t之前不发音：psychology[saɪkalədʒɪ]<br>S =&gt;偶尔在i之后不发音:island[aɪlənd]<br>=&gt;在Arkansas字尾的S：Arkansas[arkɔnsɔ]<br>t =&gt; ~sten 及 ~stle中的t 不发音<br>fasten[fæsn] castle<br>=&gt;源自法国的t不发音:depot[dipo] ballet<br>u =&gt; 偶尔在g或q之后不发音：guard[gard]<br>w =&gt;和r同时出现在字首时不发音<br>=&gt;在某些单子中不发音:two[tu]<br>notebook t省略掉</li></ul><h3 id="音的变化"><a href="#音的变化" class="headerlink" title="音的变化"></a>音的变化</h3><ol><li>字音+母音 前面的字尾是字音，后面的字首是母音时，可以连读。<br>例子：give up [vʌ]; turn off [gau]<br>Tell her I miss her.  h不发音 其他链接</li><li>字音＋字音  前面字尾的音和后字字首的子音相同，前面的子音省略。<pre><code>子音[p] [b] [t] [d] [g] [f] [v] 要轻音化</code></pre>例子: si<del>t</del> down, credi<del>t</del> card ,ho<del>t</del> dog<pre><code>I wa~~s~~ so happy. /He nee(ds a) lo(t o)~~f~~ money.I ~~h~~ave go~~t~~ t(o=&gt;a) go. =&gt; I have gotta go.Do you want to dance? =&gt; Do you wanna dance?</code></pre></li><li>母音＋母音 前字字尾的母音和后字字首的母音中，会多出[w],[j]的发音.<br>例子: Do I?/You’re so honest./He is a boy.</li><li>T.D.S.Z + Y [t] [d] [s] [z] 结尾 + 字，接上Y开头的字，会产生下列音变。<br>(1)T+Y [tʃ]<br>例子：Can’t you do it?/I’ll let you know.<br>Is/z/ /ð/tha(t y)our car?/No<br>(2)D+y [dʒ]<br>例子：Did you love me?/Could you tell me?<br>Where did you buy it?<br>(3)S+Y [ʃ]<br>例子：God bless you./Can you dress yourself?  I miss you.<br>(4)Z+Y [ʒ]<br>例子:How was your vacation? He say’s you’re good.<br>Where your sister?<br>这些变化是根据单词发音的组合而不是单纯的看单词的组合。 /z/+your [ʒ]</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开始时间：2019-5-1&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;笔记来源：100天英语挑战中的英语笔记&lt;/p&gt;
&lt;h3 id=&quot;额外的补充&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="100天挑战" scheme="http://yoursite.com/categories/100%E5%A4%A9%E6%8C%91%E6%88%98/"/>
    
      <category term="英语" scheme="http://yoursite.com/categories/100%E5%A4%A9%E6%8C%91%E6%88%98/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="英语笔记" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
